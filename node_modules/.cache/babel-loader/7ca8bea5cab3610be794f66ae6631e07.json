{"ast":null,"code":"var _jsxFileName = \"/Users/vivi/Desktop/code/food/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: item => {},\n  removeItem: id => {}\n});\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/vivi/Desktop/code/food/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","createContext","items","totalAmount","addItem","item","removeItem","id","defaultCartState","cartReducer","state","action","type","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n\nexport const CartContext = React.createContext({\n    items:[],\n    totalAmount: 0,\n    addItem: (item)=>{},\n    removeItem: (id)=>{}\n});\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n     if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  \n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: 'REMOVE', id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}