{"ast":null,"code":"var _jsxFileName = \"/Users/vivi/Desktop/code/food/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { CartContext } from '../../store/CartProvider';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch('https://food-order-b6f65-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 6\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: props.onClose,\n      onConfirm: submitOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 38\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Successfully sent the order!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 35\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Cart, \"mkyP1T14krwt2zz5rXlJIrG6NCM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/vivi/Desktop/code/food/src/components/Cart/Cart.js"],"names":["React","useState","useContext","CartContext","Modal","CartItem","classes","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","map","name","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { CartContext } from '../../store/CartProvider';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport Checkout from './Checkout';\n\nconst Cart = (props) => {\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n    const cartCtx = useContext(CartContext);\n  \n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n    const hasItems = cartCtx.items.length > 0;\n  \n    const cartItemRemoveHandler = (id) => {\n      cartCtx.removeItem(id);\n    };\n  \n    const cartItemAddHandler = (item) => {\n      cartCtx.addItem({ ...item, amount: 1 });\n    };\n\n    const orderHandler = () => {\n      setIsCheckout(true)\n    };\n\n    const submitOrderHandler = async(userData)=> {\n      setIsSubmitting(true);\n      await fetch('https://food-order-b6f65-default-rtdb.firebaseio.com/orders.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          user: userData,\n          orderedItems: cartCtx.items\n        })\n      })\n      setIsSubmitting(false);\n      setDidSubmit(true);\n      cartCtx.clearCart();\n    }\n  \n    const cartItems = (\n      <ul className={classes['cart-items']}>\n        {cartCtx.items.map((item) => (\n          <CartItem\n            key={item.id}\n            name={item.name}\n            amount={item.amount}\n            price={item.price}\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\n            onAdd={cartItemAddHandler.bind(null, item)}\n          />\n        ))}\n      </ul>\n    );\n  \n     const modalActions = \n     <div className={classes.actions}>\n     <button className={classes['button--alt']} onClick={props.onClose}>\n       Close\n     </button>\n     {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\n   </div>\n\n    const cartModalContent =(\n      <React.Fragment>\n        {cartItems}\n        <div className={classes.total}>\n          <span>Total Amount</span>\n          <span>{totalAmount}</span>\n        </div>\n       {isCheckout && <Checkout onCancel={props.onClose} onConfirm={submitOrderHandler}/>}\n       {!isCheckout && modalActions}\n      </React.Fragment>\n    );\n\n    const isSubmittingModalContent = <p>Sending order data...</p>\n    const didSubmitModalContent = <p>Successfully sent the order!</p>\n    \n    return (\n      <Modal onClose={props.onClose}>\n        {!isSubmitting && !didSubmit && cartModalContent}\n        {isSubmitting && isSubmittingModalContent}\n        {!isSubmitting && didSubmit && didSubmitModalContent}\n      </Modal>\n    );\n  };\n  \n  export default Cart;"]},"metadata":{},"sourceType":"module"}